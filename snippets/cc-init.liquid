{% assign productId = product.id | downcase %}
{% assign productNotCopied = false %}
{% if product.metafields.BackOffice.ProductId == blank or product.metafields.BackOffice.ProductId == productId %}
	{% assign productNotCopied = true %}
{% endif %}
{% if product.metafields.BackOffice.CustomersCanvasLinked and productNotCopied %}

{{ 'cc-init.css' | asset_url | stylesheet_tag }}
{{ 'storefrontInit.js' | asset_url | script_tag }}
{{ 'storefront.js' | asset_url | script_tag }}

<script type="text/javascript">
var sdkInstance="appInsightsSDK";window[sdkInstance]="appInsights";var aiName=window[sdkInstance],aisdk=window[aiName]||function(e){function n(e){t[e]=function(){var n=arguments;t.queue.push(function(){t[e].apply(t,n)})}}var t={config:e};t.initialize=!0;var i=document,a=window;setTimeout(function(){var n=i.createElement("script");n.src=e.url||"https://az416426.vo.msecnd.net/scripts/b/ai.2.min.js",i.getElementsByTagName("script")[0].parentNode.appendChild(n)});try{t.cookie=i.cookie}catch(e){}t.queue=[],t.version=2;for(var r=["Event","PageView","Exception","Trace","DependencyData","Metric","PageViewPerformance"];r.length;)n("track"+r.pop());n("startTrackPage"),n("stopTrackPage");var s="Track"+r[0];if(n("start"+s),n("stop"+s),n("addTelemetryInitializer"),n("setAuthenticatedUserContext"),n("clearAuthenticatedUserContext"),n("flush"),t.SeverityLevel={Verbose:0,Information:1,Warning:2,Error:3,Critical:4},!(!0===e.disableExceptionTracking||e.extensionConfig&&e.extensionConfig.ApplicationInsightsAnalytics&&!0===e.extensionConfig.ApplicationInsightsAnalytics.disableExceptionTracking)){n("_"+(r="onerror"));var o=a[r];a[r]=function(e,n,i,a,s){var c=o&&o(e,n,i,a,s);return!0!==c&&t["_"+r]({message:e,url:n,lineNumber:i,columnNumber:a,error:s}),c},e.autoExceptionInstrumented=!0}return t}(
{
  instrumentationKey:"3890a9c8-f4f1-4ed1-a176-936b19108a3c"
}
);window[aiName]=aisdk,aisdk.queue&&0===aisdk.queue.length&&aisdk.trackPageView({});
</script>

<script>
  document.addEventListener("DOMContentLoaded", function() {
        
    overrideThemeStrings();
    
    const designButton = document.querySelector("[target='cc-editor-button']");
    const editorContainer = document.getElementById('editor-parent-for-product');
    
    const ecommerceSystem = {
      {%  if customer %}
      userId: ShopifyInit.getUserIdForCc('{{shop.domain}}', '{{ customer.id }}'),
      {%  else %}
      userId: ShopifyInit.getUserIdForCc('{{shop.domain}}'),
      {% endif %}
      pluginSettings: { shopifyBaseUrl: window.location.origin, currency: ShopifyInit.getCurrency() },
      tenantId: 1162,
      existingOrder: ShopifyInit.getExistingOrder()
    };
    
    const product = {{ product | json }};

    // load & initialize editor
    Aurigma.Storefront.load(ecommerceSystem, product, editorContainer).then(result => {
      ShopifyInit.ecDriver = Aurigma.Storefront.driver;
      ShopifyInit.ecDriver.cart.onSubmitting.subscribe( async function() {
        let url = `${Aurigma.Storefront.projectsBufferUrl}/tenants/${ecommerceSystem.tenantId}/projects/create`;

        let pingUrl = `${Aurigma.Storefront.projectsBufferUrl}/ping`;
        let pingResult = await Aurigma.Storefront.apiClient.pingService(pingUrl);
        if (pingResult) {
            await ShopifyInit.saveProject(url);
        } else {
            alert("Service is temporarily unavailable, please try again later");
        }
      });
      
      // update product model state
      if (ShopifyInit.isApplyOptions === false) {
    	ShopifyInit.applyOptions();
      }
      
      // notify loaded
      ShopifyInit.editorLoaded = true;
      
    });
    
    // navigate to editor
    designButton.addEventListener("click", function() {
      if (ShopifyInit.editorLoaded === true) {
        // update product model state
        ShopifyInit.isApplyOptions = true;
        ShopifyInit.applyOptions();
      }
      
      // to editor
      ShopifyInit.navigateToPage("editor");
      editorContainer.scrollIntoView();
    });
    
    const queryParams = ShopifyInit.getQueryParameters();
    if (queryParams && queryParams['page'] === 'design') {
      designButton.click();
    }

  });
  
  function overrideThemeStrings() {
    /*theme.strings.addToCart = theme.productStrings.addToCart = 'Design products';*/
  }
  
</script>

{% endif %}